---
version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev apt-transport-https ca-certificates curl gnupg-agent software-properties-common && pip3 install --upgrade awscli
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      - sudo add-apt-repository \
         "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
         $(lsb_release -cs) \
         stable"
      - apt-get update
      - apt-get install docker-ce docker-ce-cli containerd.io
  pre_build:
      commands:
        - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - sed -i 's@CONTAINER_IMAGE@'"449814511849.dkr.ecr.us-west-2.amazonaws.com/eksws-ecrdo-1r9p48bv1smtx:$TAG"'@' hello-k8s.yml
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - docker build -t eksws-ecrdo-1r9p48bv1smtx .
      - docker image tag eksws-ecrdo-1r9p48bv1smtx 449814511849.dkr.ecr.us-west-2.amazonaws.com/eksws-ecrdo-1r9p48bv1smtx:$TAG

  post_build:
    commands:
      - docker push 449814511849.dkr.ecr.us-west-2.amazonaws.com/eksws-ecrdo-1r9p48bv1smtx:$TAG
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name avengers
      - kubectl version --short
      - kubectl get nodes
      - kubectl apply -f hello-k8s.yml
      - printf '[{"name":"hello-k8s","imageUri":"%s"}]' 449814511849.dkr.ecr.us-west-2.amazonaws.com/eksws-ecrdo-1r9p48bv1smtx:$TAG > build.json
artifacts:
  files: build.json
